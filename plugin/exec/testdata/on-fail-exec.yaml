name: on-fail-exec
description: a scenario that has an on.fail.exec clause
tests:
  - exec: echo "cat"
    assert:
      out:
        is: cat
    # Unfortunately there's not really any good way of testing things like this
    # except by manually causing an assertion to fail in the test case and checking
    # to see if the `on.fail` action was taken and debug output emitted to the
    # console.
    # 
    # When I change `assert.out.is` above to "dat" instead of "cat", I get the
    # correct behaviour:
    # 
    # === RUN   TestOnFail
    # === RUN   TestOnFail/on-fail-exec
    #     action.go:59: exec: echo [cat]
    #     eval.go:35: assertion failed: not equal: expected dat but got cat
    #     action.go:59: exec: echo [bad kitty]
    #     eval.go:46: on.fail.exec: stdout: bad kitty
    # === NAME  TestOnFail
    #     eval_test.go:256:
    #         	Error Trace:	/home/jaypipes/src/github.com/gdt-dev/gdt/plugin/exec/eval_test.go:256
    #         	Error:      	Should be false
    #         	Test:       	TestOnFail
    # --- FAIL: TestOnFail (0.00s)
    #     --- FAIL: TestOnFail/on-fail-exec (0.00s)
    on:
      fail:
        exec: echo "bad kitty"
